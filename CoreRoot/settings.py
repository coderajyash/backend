# """
# Django settings for CoreRoot project.

# Generated by 'django-admin startproject' using Django 4.0.3.

# For more information on this file, see
# https://docs.djangoproject.com/en/4.0/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/4.0/ref/settings/
# """

# import os
# from dotenv import load_dotenv
# from pathlib import Path

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# load_dotenv()

# ENV = os.environ.get("ENV")

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = os.environ.get(
#     "SECRET_KEY", default="django-insecure-3&#hhp%8#5imvz6zndwlfq$5lr@vbu^cd(tj%gk#=%+&8tkf&l"
# )

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False if ENV == "PROD" else True

# # ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", "*").split(",")
# ALLOWED_HOSTS = ["0.0.0.0", "13.53.177.141","momento-tau-two.vercel.app","127.0.0.1","localhost","13.53.177.141,ec2-13-53-177-141.eu-north-1.compute.amazonaws.com"]
# # Application definition

# # CORS_ALLOWED_ORIGINS = [
# #     "https://momento-tau-two.vercel.app",  # Add frontend URL
# #     "http://localhost:3000",
# #     "http://13.53.177.141:8000"  # If running frontend locally
# # ]
# # CSRF_TRUSTED_ORIGINS = [
# #     'https://momento-tau-two.vercel.app',
# #     "http://localhost:3000",
# #     "http://13.53.177.141:8000"
# # ]
# # CSRF_TRUSTED_ORIGINS = ["*"]

# CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]

# CORS_ALLOW_ALL_ORIGINS = True
# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'corsheaders',
#     "rest_framework_simplejwt.token_blacklist",
#     'rest_framework',
#     'rest_framework_simplejwt',
#     'core',
#     'core.user',
#     'core.auth',
#     'core.post',
#     'core.comment'
# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'corsheaders.middleware.CorsMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     # 'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'CoreRoot.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'CoreRoot.wsgi.application'

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "NAME": os.getenv("DATABASE_NAME", "djangodb"),
#         "USER": os.getenv("DATABASE_USER", "myuser"),
#         "PASSWORD": os.getenv("DATABASE_PASSWORD", "yash@djangoapp"),
#         "HOST": os.environ.get("DATABASE_HOST", "localhost"),
#         "PORT": os.getenv("DATABASE_PORT", "5432"),
#     }
# }


# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# STATIC_URL = 'static/'


# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# AUTH_USER_MODEL = 'core_user.User'

# REST_FRAMEWORK = {

#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ),
#     'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
#     'PAGE_SIZE': 15
# }


# # Media files
# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'uploads'

# DEFAULT_AVATAR_URL = "https://avatars.dicebear.com/api/identicon/.svg"


"""
Django settings for CoreRoot project.
"""

import os
from dotenv import load_dotenv
from pathlib import Path

# Load environment variables
load_dotenv()

# Base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent

# Environment (DEV or PROD)
ENV = os.environ.get("ENV", "DEV")

# Security
SECRET_KEY = os.environ.get("SECRET_KEY", "django-insecure-3&#hhp%8#5imvz6zndwlfq$5lr@vbu^cd(tj%gk#=%+&8tkf&l")
DEBUG = False if ENV == "PROD" else True

# Allowed Hosts
ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", "").split(",")

# Installed Applications
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party
    'corsheaders',
    "rest_framework_simplejwt.token_blacklist",
    'rest_framework',
    'rest_framework_simplejwt',

    # Local apps
    'core',
    'core.user',
    'core.auth',
    'core.post',
    'core.comment'
]

# Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    # CORS middleware must be above CommonMiddleware
    'corsheaders.middleware.CorsMiddleware',  

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Root URL Configuration
ROOT_URLCONF = 'CoreRoot.urls'

# Templates Configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI Application
WSGI_APPLICATION = 'CoreRoot.wsgi.application'

# Database Configuration
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("DATABASE_NAME", "djangodb"),
        "USER": os.getenv("DATABASE_USER", "myuser"),
        "PASSWORD": os.getenv("DATABASE_PASSWORD", "yash@djangoapp"),
        "HOST": os.environ.get("DATABASE_HOST", "localhost"),
        "PORT": os.getenv("DATABASE_PORT", "5432"),
    }
}

# Password Validators
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static Files
STATIC_URL = 'static/'

# Default Auto Field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model
AUTH_USER_MODEL = 'core_user.User'

# REST Framework Configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 15
}

# Media Files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'uploads'

# Default Avatar URL
DEFAULT_AVATAR_URL = "https://avatars.dicebear.com/api/identicon/.svg"

# CORS Headers Configuration
CORS_ALLOW_CREDENTIALS = True  # Allows frontend to send credentials (cookies/JWT)

CORS_ALLOWED_ORIGINS = [
    "https://momento-tau-two.vercel.app",  # Frontend on Vercel
    "http://localhost:3000",  # Local frontend
    "http://13.53.177.141"  # EC2 backend
]

CSRF_TRUSTED_ORIGINS = [
    "https://momento-tau-two.vercel.app",
    "http://localhost:3000",
    "http://13.53.177.141"
]

CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]

CORS_ALLOW_HEADERS = [
    "authorization",
    "content-type",
    "x-csrftoken",
    "x-requested-with",
]